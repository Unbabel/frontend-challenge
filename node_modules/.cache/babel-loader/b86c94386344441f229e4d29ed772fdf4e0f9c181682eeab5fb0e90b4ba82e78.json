{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ismael/Documents/personal/frontend-challenge/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/ismael/Documents/personal/frontend-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { getMessages as _getMessages, uploadMessages as _uploadMessages } from \"@/api/mocky\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport function state() {\n  return {\n    messages: [],\n    isFormValid: false\n  };\n}\nexport var mutations = {\n  setMessages: function setMessages(state, data) {\n    state.messages = data;\n  },\n  addMessage: function addMessage(state) {\n    if (state.messages.length === 0) {\n      state.messages.push({\n        id: 4,\n        voice: \"\",\n        text: \"\"\n      });\n    } else {\n      var newId = state.messages[state.messages.length - 1].id + 1;\n      state.messages.push({\n        id: newId,\n        voice: \"\",\n        text: \"\"\n      });\n    }\n  },\n  deleteMessage: function deleteMessage(state, _ref) {\n    var id = _ref.id;\n    var index = state.messages.findIndex(function (message) {\n      return message.id === id;\n    });\n    state.messages.splice(index, 1);\n  },\n  updateMessageVoice: function updateMessageVoice(state, _ref2) {\n    var id = _ref2.id,\n      value = _ref2.value;\n    var indexToUpdate = state.messages.findIndex(function (message) {\n      return message.id === id;\n    });\n    state.messages[indexToUpdate].voice = value;\n  },\n  updateMessageText: function updateMessageText(state, _ref3) {\n    var id = _ref3.id,\n      value = _ref3.value;\n    var indexToUpdate = state.messages.findIndex(function (message) {\n      return message.id === Number(id);\n    });\n    state.messages[indexToUpdate].text = value;\n  },\n  checkFormValid: function checkFormValid(state) {\n    var validValues = state.messages.map(function (message) {\n      return message.voice !== \"\" && message.text !== \"\";\n    });\n    var isValid = !validValues.includes(false);\n    state.isFormValid = isValid;\n  }\n};\nexport var actions = {\n  getMessages: function getMessages(_ref4) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var commit, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref4.commit;\n            _context.next = 3;\n            return _getMessages();\n          case 3:\n            data = _context.sent;\n            commit(\"setMessages\", data);\n            commit(\"checkFormValid\");\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  uploadMessages: function uploadMessages(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var state, status;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            state = _ref5.state;\n            _context2.next = 3;\n            return _uploadMessages(state.messages);\n          case 3:\n            status = _context2.sent;\n            if (status === 200) {\n              alert(\"Messages uploaded successfully\");\n            } else {\n              alert(\"An error has occured while uploading the data, please try again later.\");\n            }\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  mutations: mutations,\n  actions: actions\n});","map":{"version":3,"names":["getMessages","uploadMessages","Vue","Vuex","use","state","messages","isFormValid","mutations","setMessages","data","addMessage","length","push","id","voice","text","newId","deleteMessage","_ref","index","findIndex","message","splice","updateMessageVoice","_ref2","value","indexToUpdate","updateMessageText","_ref3","Number","checkFormValid","validValues","map","isValid","includes","actions","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","wrap","_callee$","_context","prev","next","sent","stop","_ref5","_callee2","status","_callee2$","_context2","alert","Store"],"sources":["/Users/ismael/Documents/personal/frontend-challenge/src/store/index.js"],"sourcesContent":["import { getMessages, uploadMessages } from \"@/api/mocky\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport function state() {\n  return {\n    messages: [],\n    isFormValid: false,\n  };\n}\n\nexport const mutations = {\n  setMessages(state, data) {\n    state.messages = data;\n  },\n  addMessage(state) {\n    if (state.messages.length === 0) {\n      state.messages.push({\n        id: 4,\n        voice: \"\",\n        text: \"\",\n      });\n    } else {\n      const newId = state.messages[state.messages.length - 1].id + 1;\n      state.messages.push({\n        id: newId,\n        voice: \"\",\n        text: \"\",\n      });\n    }\n  },\n  deleteMessage(state, { id }) {\n    const index = state.messages.findIndex((message) => message.id === id);\n    state.messages.splice(index, 1);\n  },\n  updateMessageVoice(state, { id, value }) {\n    const indexToUpdate = state.messages.findIndex(\n      (message) => message.id === id\n    );\n    state.messages[indexToUpdate].voice = value;\n  },\n  updateMessageText(state, { id, value }) {\n    const indexToUpdate = state.messages.findIndex(\n      (message) => message.id === Number(id)\n    );\n    state.messages[indexToUpdate].text = value;\n  },\n  checkFormValid(state) {\n    const validValues = state.messages.map(\n      (message) => message.voice !== \"\" && message.text !== \"\"\n    );\n    const isValid = !validValues.includes(false);\n    state.isFormValid = isValid;\n  },\n};\n\nexport const actions = {\n  async getMessages({ commit }) {\n    const data = await getMessages();\n    commit(\"setMessages\", data);\n    commit(\"checkFormValid\");\n  },\n  async uploadMessages({ state }) {\n    const status = await uploadMessages(state.messages);\n    if (status === 200) {\n      alert(\"Messages uploaded successfully\");\n    } else {\n      alert(\n        \"An error has occured while uploading the data, please try again later.\"\n      );\n    }\n  },\n};\n\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}