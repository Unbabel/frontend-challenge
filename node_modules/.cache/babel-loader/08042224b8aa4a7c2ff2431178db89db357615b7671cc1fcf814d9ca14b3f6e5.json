{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: []\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      const newId = state.messages[state.messages.length - 1].id + 1;\n      state.messages.push({\n        id: newId,\n        voice: \"\",\n        text: \"\"\n      });\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex(message => message.id === id);\n      state.messages.splice(index, 1);\n    },\n    updateMessageVoice(state, target) {\n      const {\n        id,\n        value\n      } = target;\n      const indexToUpdate = state.messages.findIndex(message => message.id === Number(id));\n      console.log(value);\n      state.messages[indexToUpdate].voice = value;\n    },\n    updateMessageText(state, target) {\n      const {\n        id,\n        value\n      } = target;\n      const indexToUpdate = state.messages.findIndex(message => message.id === Number(id));\n      state.messages[indexToUpdate].text = value;\n    }\n  },\n  actions: {\n    async getMessages({\n      commit\n    }) {\n      try {\n        const res = await fetch(\"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\");\n        const data = await res.json();\n        commit(\"setMessages\", data);\n      } catch (error) {\n        alert(\"An error has occured while getting the data, please try again later.\");\n        commit(\"setMessages\", []);\n      }\n    },\n    async uploadMessages({\n      state\n    }) {\n      try {\n        const res = await fetch(\"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\", {\n          method: \"POST\",\n          body: JSON.stringify(state.messages)\n        });\n        const data = res.json();\n        console.log(data);\n      } catch (error) {\n        alert(\"An error has occured while uploading the data, please try again later.\");\n      }\n    }\n  },\n  getters: {},\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","messages","mutations","setMessages","data","addMessage","newId","length","id","push","voice","text","deleteMessage","index","findIndex","message","splice","updateMessageVoice","target","value","indexToUpdate","Number","console","log","updateMessageText","actions","getMessages","commit","res","fetch","json","error","alert","uploadMessages","method","body","JSON","stringify","getters","modules"],"sources":["/Users/ismael/Documents/personal/frontend-challenge/unbabel-test/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: [],\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      const newId = state.messages[state.messages.length - 1].id + 1;\n      state.messages.push({\n        id: newId,\n        voice: \"\",\n        text: \"\",\n      });\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex((message) => message.id === id);\n      state.messages.splice(index, 1);\n    },\n    updateMessageVoice(state, target) {\n      const { id, value } = target;\n      const indexToUpdate = state.messages.findIndex(\n        (message) => message.id === Number(id)\n      );\n      console.log(value);\n      state.messages[indexToUpdate].voice = value;\n    },\n    updateMessageText(state, target) {\n      const { id, value } = target;\n      const indexToUpdate = state.messages.findIndex(\n        (message) => message.id === Number(id)\n      );\n      state.messages[indexToUpdate].text = value;\n    },\n  },\n  actions: {\n    async getMessages({ commit }) {\n      try {\n        const res = await fetch(\n          \"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\"\n        );\n        const data = await res.json();\n        commit(\"setMessages\", data);\n      } catch (error) {\n        alert(\n          \"An error has occured while getting the data, please try again later.\"\n        );\n        commit(\"setMessages\", []);\n      }\n    },\n    async uploadMessages({ state }) {\n      try {\n        const res = await fetch(\n          \"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\",\n          {\n            method: \"POST\",\n            body: JSON.stringify(state.messages),\n          }\n        );\n        const data = res.json();\n        console.log(data);\n      } catch (error) {\n        alert(\n          \"An error has occured while uploading the data, please try again later.\"\n        );\n      }\n    },\n  },\n  getters: {},\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}