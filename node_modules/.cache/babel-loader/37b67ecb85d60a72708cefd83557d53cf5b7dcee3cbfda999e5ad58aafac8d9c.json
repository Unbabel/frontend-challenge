{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getMessages } from \"@/api/mocky\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: []\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      if (state.messages.length === 0) {\n        state.messages.push({\n          id: 1,\n          voice: \"\",\n          text: \"\"\n        });\n      } else {\n        const newId = state.messages[state.messages.length - 1].id + 1;\n        state.messages.push({\n          id: newId,\n          voice: \"\",\n          text: \"\"\n        });\n      }\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex(message => message.id === id);\n      state.messages.splice(index, 1);\n    },\n    updateMessageVoice(state, target) {\n      const {\n        id,\n        value\n      } = target;\n      const idValue = id.split(\"voice-id-\")[1];\n      const indexToUpdate = state.messages.findIndex(message => message.id === Number(idValue));\n      state.messages[indexToUpdate].voice = value;\n    },\n    updateMessageText(state, target) {\n      const {\n        id,\n        value\n      } = target;\n      const idValue = id.split(\"text-id-\")[1];\n      const indexToUpdate = state.messages.findIndex(message => message.id === Number(idValue));\n      state.messages[indexToUpdate].text = value;\n    },\n    uploadMessages(state, status) {\n      if (status === 200) {\n        alert(\"Messages uploaded successfully\");\n      } else {\n        alert(\"An error has occured while uploading the data, please try again later.\");\n      }\n    }\n  },\n  actions: {\n    async getMessages({\n      commit\n    }) {\n      const data = await getMessages();\n      commit(\"setMessages\", data);\n    },\n    async uploadMessages({\n      commit,\n      state\n    }) {\n      try {\n        const res = uploadMessages(JSON.stringify(state.messages));\n        commit(\"uploadMessages\", res.status);\n      } catch (error) {\n        alert(\"An error has occured while uploading the data, please try again later.\");\n      }\n    }\n  },\n  getters: {},\n  modules: {}\n});","map":{"version":3,"names":["getMessages","Vue","Vuex","use","Store","state","messages","mutations","setMessages","data","addMessage","length","push","id","voice","text","newId","deleteMessage","index","findIndex","message","splice","updateMessageVoice","target","value","idValue","split","indexToUpdate","Number","updateMessageText","uploadMessages","status","alert","actions","commit","res","JSON","stringify","error","getters","modules"],"sources":["/Users/ismael/Documents/personal/frontend-challenge/unbabel-test/src/store/index.js"],"sourcesContent":["import { getMessages } from \"@/api/mocky\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: [],\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      if (state.messages.length === 0) {\n        state.messages.push({\n          id: 1,\n          voice: \"\",\n          text: \"\",\n        });\n      } else {\n        const newId = state.messages[state.messages.length - 1].id + 1;\n        state.messages.push({\n          id: newId,\n          voice: \"\",\n          text: \"\",\n        });\n      }\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex((message) => message.id === id);\n      state.messages.splice(index, 1);\n    },\n    updateMessageVoice(state, target) {\n      const { id, value } = target;\n      const idValue = id.split(\"voice-id-\")[1];\n      const indexToUpdate = state.messages.findIndex(\n        (message) => message.id === Number(idValue)\n      );\n      state.messages[indexToUpdate].voice = value;\n    },\n    updateMessageText(state, target) {\n      const { id, value } = target;\n      const idValue = id.split(\"text-id-\")[1];\n      const indexToUpdate = state.messages.findIndex(\n        (message) => message.id === Number(idValue)\n      );\n      state.messages[indexToUpdate].text = value;\n    },\n    uploadMessages(state, status) {\n      if (status === 200) {\n        alert(\"Messages uploaded successfully\");\n      } else {\n        alert(\n          \"An error has occured while uploading the data, please try again later.\"\n        );\n      }\n    },\n  },\n  actions: {\n    async getMessages({ commit }) {\n      const data = await getMessages();\n      commit(\"setMessages\", data);\n    },\n    async uploadMessages({ commit, state }) {\n      try {\n        const res = uploadMessages(JSON.stringify(state.messages));\n        commit(\"uploadMessages\", res.status);\n      } catch (error) {\n        alert(\n          \"An error has occured while uploading the data, please try again later.\"\n        );\n      }\n    },\n  },\n  getters: {},\n  modules: {},\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}