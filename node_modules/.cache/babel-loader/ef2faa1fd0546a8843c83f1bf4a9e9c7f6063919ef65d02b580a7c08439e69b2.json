{"ast":null,"code":"export default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\"\n  },\n  props: {\n    value: {\n      type: String\n    },\n    modelValue: {\n      default: \"\"\n    },\n    trueValue: {\n      default: true\n    },\n    falseValue: {\n      default: false\n    }\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      // Note that `true-value` and `false-value` are camelCase in the JS\n      return this.modelValue === this.trueValue;\n    }\n  }\n};","map":{"version":3,"names":["model","prop","event","props","value","type","String","modelValue","default","trueValue","falseValue","computed","isChecked","Array","includes"],"sources":["src/components/CustomCheckbox.vue"],"sourcesContent":["/** * @usage: * *\n<CheckBox label=\"Foo\" value=\"foo\" v-model=\"MySelectedValues\" />\n*\n<CheckBox label=\"Bar\" value=\"bar\" v-model=\"MySelectedValues\" />\n*\n<CheckBox label=\"Baz\" value=\"baz\" v-model=\"MySelectedValues\" />\n* * data(){ * return { * MySelectedValues: [], * } * } */\n\n<template>\n  <label class=\"wrapper flex items-center\">\n    <input class=\"checkbox\" type=\"checkbox\" />\n    <span class=\"checkmark\"></span>\n  </label>\n</template>\n\n<script>\nexport default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\",\n  },\n  props: {\n    value: { type: String },\n    modelValue: { default: \"\" },\n    trueValue: { default: true },\n    falseValue: { default: false },\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      // Note that `true-value` and `false-value` are camelCase in the JS\n      return this.modelValue === this.trueValue;\n    },\n  },\n};\n</script>\n\n<style lang=\"postcss\" scoped>\n/* Customize the label (the wrapper) */\n.wrapper {\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 6px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  font-size: 16px;\n}\n/* Hide the browser's default checkbox */\n.wrapper input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n/* Create a custom checkbox */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 21px;\n  width: 21px;\n  border-radius: 2px;\n  background-color: #fff;\n  border: 1px solid #859eff;\n}\n/* On mouse-over, add a grey background color */\n.wrapper:hover input ~ .checkmark {\n  background-color: #859eff;\n}\n/* When the checkbox is checked, add a blue background */\n.wrapper input:checked ~ .checkmark {\n  background-color: #859eff;\n}\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n/* Show the checkmark when checked */\n.wrapper input:checked ~ .checkmark:after {\n  display: block;\n}\n/* Style the checkmark/indicator */\n.wrapper .checkmark:after {\n  left: 7px;\n  top: 0px;\n  width: 7px;\n  height: 15px;\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n</style>\n"],"mappings":"AAgBA;EACAA,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC;IAAA;IACAC,UAAA;MAAAC,OAAA;IAAA;IACAC,SAAA;MAAAD,OAAA;IAAA;IACAE,UAAA;MAAAF,OAAA;IAAA;EACA;EACAG,QAAA;IACAC,UAAA;MACA,SAAAL,UAAA,YAAAM,KAAA;QACA,YAAAN,UAAA,CAAAO,QAAA,MAAAV,KAAA;MACA;MACA;MACA,YAAAG,UAAA,UAAAE,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}