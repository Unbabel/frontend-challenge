{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: []\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      const id = state.messages.length + 2;\n      state.messages.push({\n        id: id,\n        voice: \"\",\n        messages: \"\"\n      });\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex(message => message.id === id);\n      state.messages.splice(index, 1);\n    }\n  },\n  actions: {\n    async getMessages({\n      commit\n    }) {\n      try {\n        const res = await fetch(\"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\");\n        const data = await res.json();\n        commit(\"setMessages\", data);\n      } catch (error) {\n        alert(\"An error has occured, please try again later.\");\n        commit(\"setMessages\", []);\n      }\n    }\n  },\n  getters: {},\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","messages","mutations","setMessages","data","addMessage","id","length","push","voice","deleteMessage","index","findIndex","message","splice","actions","getMessages","commit","res","fetch","json","error","alert","getters","modules"],"sources":["/Users/ismael/Documents/personal/frontend-challenge/unbabel-test/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state() {\n    return {\n      messages: [],\n    };\n  },\n  mutations: {\n    async setMessages(state, data) {\n      state.messages = data;\n    },\n    addMessage(state) {\n      const id = state.messages.length + 2;\n      state.messages.push({\n        id: id,\n        voice: \"\",\n        messages: \"\",\n      });\n    },\n    deleteMessage(state, id) {\n      const index = state.messages.findIndex((message) => message.id === id);\n      state.messages.splice(index, 1);\n    },\n  },\n  actions: {\n    async getMessages({ commit }) {\n      try {\n        const res = await fetch(\n          \"http://www.mocky.io/v2/5ae1c5792d00004d009d7e5c\"\n        );\n        const data = await res.json();\n        commit(\"setMessages\", data);\n      } catch (error) {\n        alert(\"An error has occured, please try again later.\");\n        commit(\"setMessages\", []);\n      }\n    },\n  },\n  getters: {},\n  modules: {},\n});\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACT,MAAMC,WAAWA,CAACH,KAAK,EAAEI,IAAI,EAAE;MAC7BJ,KAAK,CAACC,QAAQ,GAAGG,IAAI;IACvB,CAAC;IACDC,UAAUA,CAACL,KAAK,EAAE;MAChB,MAAMM,EAAE,GAAGN,KAAK,CAACC,QAAQ,CAACM,MAAM,GAAG,CAAC;MACpCP,KAAK,CAACC,QAAQ,CAACO,IAAI,CAAC;QAClBF,EAAE,EAAEA,EAAE;QACNG,KAAK,EAAE,EAAE;QACTR,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC;IACDS,aAAaA,CAACV,KAAK,EAAEM,EAAE,EAAE;MACvB,MAAMK,KAAK,GAAGX,KAAK,CAACC,QAAQ,CAACW,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACP,EAAE,KAAKA,EAAE,CAAC;MACtEN,KAAK,CAACC,QAAQ,CAACa,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IACjC;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,iDAAiD,CAClD;QACD,MAAMf,IAAI,GAAG,MAAMc,GAAG,CAACE,IAAI,EAAE;QAC7BH,MAAM,CAAC,aAAa,EAAEb,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,KAAK,CAAC,+CAA+C,CAAC;QACtDL,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC;MAC3B;IACF;EACF,CAAC;EACDM,OAAO,EAAE,CAAC,CAAC;EACXC,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}