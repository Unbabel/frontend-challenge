{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\"\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      // Note that `true-value` and `false-value` are camelCase in the JS\n      return this.modelValue === this.trueValue;\n    }\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    }\n  }\n};","map":{"version":3,"names":["model","prop","event","computed","isChecked","modelValue","Array","includes","value","trueValue","methods","updateInput","target","checked","newValue","push","splice","indexOf","$emit","falseValue"],"sources":["src/components/CustomCheckbox.vue"],"sourcesContent":["/** * @usage: * *\n<CheckBox label=\"Foo\" value=\"foo\" v-model=\"MySelectedValues\" />\n*\n<CheckBox label=\"Bar\" value=\"bar\" v-model=\"MySelectedValues\" />\n*\n<CheckBox label=\"Baz\" value=\"baz\" v-model=\"MySelectedValues\" />\n* * data(){ * return { * MySelectedValues: [], * } * } */\n\n<template>\n  <label class=\"wrapper flex items-center\">\n    <input\n      class=\"checkbox\"\n      type=\"checkbox\"\n      :checked=\"isChecked\"\n      :value=\"value\"\n      @change=\"updateInput\"\n    />\n    <span class=\"checkmark\"></span>\n  </label>\n</template>\n\n<script>\nexport default {\n  model: {\n    prop: \"modelValue\",\n    event: \"change\",\n  },\n  computed: {\n    isChecked() {\n      if (this.modelValue instanceof Array) {\n        return this.modelValue.includes(this.value);\n      }\n      // Note that `true-value` and `false-value` are camelCase in the JS\n      return this.modelValue === this.trueValue;\n    },\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"postcss\" scoped>\n/* Customize the label (the wrapper) */\n.wrapper {\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 6px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  font-size: 16px;\n}\n/* Hide the browser's default checkbox */\n.wrapper input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n/* Create a custom checkbox */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 21px;\n  width: 21px;\n  border-radius: 2px;\n  background-color: #fff;\n  border: 1px solid #859eff;\n}\n/* On mouse-over, add a grey background color */\n.wrapper:hover input ~ .checkmark {\n  background-color: #859eff;\n}\n/* When the checkbox is checked, add a blue background */\n.wrapper input:checked ~ .checkmark {\n  background-color: #859eff;\n}\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n/* Show the checkmark when checked */\n.wrapper input:checked ~ .checkmark:after {\n  display: block;\n}\n/* Style the checkmark/indicator */\n.wrapper .checkmark:after {\n  left: 7px;\n  top: 0px;\n  width: 7px;\n  height: 15px;\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n</style>\n"],"mappings":";AAsBA;EACAA,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,SAAAC,UAAA,YAAAC,KAAA;QACA,YAAAD,UAAA,CAAAE,QAAA,MAAAC,KAAA;MACA;MACA;MACA,YAAAH,UAAA,UAAAI,SAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAAT,KAAA;MACA,IAAAE,SAAA,GAAAF,KAAA,CAAAU,MAAA,CAAAC,OAAA;MACA,SAAAR,UAAA,YAAAC,KAAA;QACA,IAAAQ,QAAA,YAAAT,UAAA;QACA,IAAAD,SAAA;UACAU,QAAA,CAAAC,IAAA,MAAAP,KAAA;QACA;UACAM,QAAA,CAAAE,MAAA,CAAAF,QAAA,CAAAG,OAAA,MAAAT,KAAA;QACA;QACA,KAAAU,KAAA,WAAAJ,QAAA;MACA;QACA,KAAAI,KAAA,WAAAd,SAAA,QAAAK,SAAA,QAAAU,UAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}